{"version":3,"sources":["components/portal.js","components/nav_sidebar.js","components/plot_time_series.js","components/plot_content.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["potalRoot","document","getElementById","Portal","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","el","createElement","appendChild","removeChild","ReactDOM","createPortal","children","React","Component","HelpButton","componentWillMount","addEventListener","handleHelpButtonOutsideClick","componentWillUnmount","removeEventListener","react_default","a","className","onClick","handleHelpButtonClick","NavSideBar","_this2","setState","toolTipOpen","state","e","node","contains","target","renderGaugeStationFilter","dist_default","options","value","label","onChange","handleChangeStation","site_number","placeholder","placeholderClassName","menuClassName","renderTimeIntervalFilter","handleChangeDayInterval","days_interval","_this3","isPlotOpen","activeTab","class","ref","style","marginLeft","nav_sidebar_HelpButton","portal_Portal","PlotTimeSeries","renderPlotFlow","data","y","x","date","type","mode","marker","color","react_plotly_default","layout","responsive","xaxis","title","titlefont","family","size","yaxis","automargin","width","height","useResizeHandler","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","Tab","tabLabel","classNames","grey-text","active-tab","blue-text text-lighten-2","labelClass","font","PlotContent","getData","url","concat","axios","get","then","response","sortValueDate","isLoaded","catch","error","console","log","timeSeries","values","_","map","sourceInfo","geoLocation","geogLocation","latitude","longitude","station_name","siteName","renderleafletMap","position","Map","center","zoom","TileLayer","attribution","Marker","Popup","renderContent","plot_time_series_PlotTimeSeries","prevProps","prevState","plot_content_Tab","handleChangeActiveTab","App","renderNavBar","href","id","nav_sidebar_NavSideBar","plot_content_PlotContent","Boolean","window","location","hostname","match","render","src_App_0","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.38eabbe2.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst potalRoot = document.getElementById('potal');\n\nexport default class Portal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    // The portal element is inserted in the DOM tree after\n    // the Modal's children are mounted, meaning that children\n    // will be mounted on a detached DOM node. If a child\n    // component requires to be attached to the DOM tree\n    // immediately when mounted, for example to measure a\n    // DOM node, or uses 'autoFocus' in a descendant, add\n    // state to Modal and only render the children when Modal\n    // is inserted in the DOM tree.\n    potalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    potalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(\n      this.props.children,\n      this.el,\n    );\n  }\n}","import React from 'react'\nimport Dropdown from 'react-dropdown'\nimport 'react-dropdown/style.css'\nimport Portal from './portal'\n\nclass HelpButton extends React.Component {\n  componentWillMount = () => {\n    document.addEventListener('click', this.props.handleHelpButtonOutsideClick, false);\n  }\n  componentWillUnmount = () => {\n    document.removeEventListener('click', this.props.handleHelpButtonOutsideClick, false);\n\n  }\n\n  render(){\n    return(\n      <i className=\"far fa-question-circle\" onClick={this.props.handleHelpButtonClick}></i>\n    )\n  }\n}\n\nexport default class NavSideBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toolTipOpen:false\n    };\n  }\n\n  handleHelpButtonClick = () => {\n    this.setState({\n      toolTipOpen: !this.state.toolTipOpen\n    })\n  }\n\n  handleHelpButtonOutsideClick = (e) => {\n    if(!this.node.contains(e.target))\n      this.setState({ toolTipOpen: false })\n  }\n\n  renderGaugeStationFilter = () => {\n    let options = [\n      { value: '08313000', label : 'RIO GRANDE AT OTOWI BRIDGE'},\n      { value: '08317200', label : 'SANTA FE RIVER ABOVE COCHITI LAKE'},\n      { value: '08378500', label : 'PECOS RIVER NEAR PECOS'},\n    ]\n\n    return(\n      <Dropdown options={options} onChange={this.props.handleChangeStation} value={this.props.site_number} placeholder=\"Select an option\" \n        placeholderClassName='dropDownPlaceHolder' menuClassName='dropDownPlaceHolder'/>\n    )\n  }\n\n  renderTimeIntervalFilter = () => {\n    let options = [\n      { value: '10', label : 'past 10 days'},\n      { value: '20', label : 'past 20 days'},\n      { value: '30', label : 'past 30 days'},\n    ]\n\n    return(\n      <div>\n        <h6> Select Duration </h6>\n        <Dropdown options={options} onChange={this.props.handleChangeDayInterval} value={this.props.days_interval} \n        placeholder=\"Select an option\" placeholderClassName='dropDownPlaceHolder' menuClassName='dropDownPlaceHolder'/>\n      </div>\n    )\n  }\n\n  render() {\n    const isPlotOpen = this.props.activeTab == 'Plot'\n\n    return (\n      <div className=\"section\">            \n        <div className=\"row\">\n          <div class=\"col s12\" ref={(node) => { this.node = node; }}>\n            <h6> \n              Select Gauge Station \n              <a className=\"tooltip-button\" style={{marginLeft : 10}}>\n                <HelpButton handleHelpButtonClick={this.handleHelpButtonClick} handleHelpButtonOutsideClick={this.handleHelpButtonOutsideClick}/>\n                {\n                  this.state.toolTipOpen?(\n                  <Portal>\n                    <nav className=\"potal-container blue darken-4\">\n                      <div className=\"nav-wrapper \">\n                          <ul>\n                              <i className=\"far fa-lightbulb\"></i>\n                              <span> Gauge station is used to monitor and test terrestrial bodies of water. </span>\n                          </ul>\n                      </div>\n                    </nav>\n                  </Portal> \n                  ):(\n                    null\n                  )\n                }\n              </a>\n            </h6>\n            {this.renderGaugeStationFilter()}\n            {\n              isPlotOpen?(\n                this.renderTimeIntervalFilter()\n              ):(\n                null\n              )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport Plot from 'react-plotly.js';\n\n\nexport default class PlotTimeSeries extends React.Component {\n\n  renderPlotFlow = () => {\n    const layout = {\n      responsive: true,\n      xaxis: {\n           title: 'Date',\n           titlefont: {\n               family: 'Courier New, monospace',\n               size: 18,\n               color: '#7f7f7f'\n           }\n      },\n      yaxis: {\n           title: 'Discharge Rate ft3/s',\n           automargin: true,\n           titlefont: {\n               family: 'Courier New, monospace',\n               size: 18,\n               color: '#7f7f7f'\n           }\n      },\n\n    }\n\n    const data = {\n      y: this.props.value,\n      x: this.props.date,\n      type: 'scatter',\n      mode: 'lines+points',\n      marker: {color: 'red'}\n    }\n\n    return(\n      <Plot data = {[ data ]} layout = { layout } style = {[{width: \"100%\", height: \"100%\"}]}\n        useResizeHandler = 'true'\n      />\n    );\n  }\n\n  render() {\n    return (\n      this.renderPlotFlow()\n    )\n  }\n}\n","import React from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport Plot from 'react-plotly.js';\nimport { Map, Marker, Popup, TileLayer } from 'react-leaflet'\nimport L from 'leaflet';\nimport PlotTimeSeries from './plot_time_series'\nimport classNames from 'classnames'\n\ndelete L.Icon.Default.prototype._getIconUrl;\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\n\nclass Tab extends React.Component {\n  render(){\n    const tabLabel = this.props.tabLabel\n    const className = classNames (\n      {\n        'grey-text' : tabLabel !== this.props.activeTab,\n        'active-tab': tabLabel == this.props.activeTab,\n        'blue-text text-lighten-2': tabLabel == this.props.activeTab\n      }\n    )\n\n    return (\n      <li className='tab col s3 offset-s1' onClick={() => {this.props.onClick(tabLabel)}}> \n        <a className={className}>\n          <i className={this.props.labelClass} style={{font : 15}}></i>\n          <span style={{marginLeft : 10}}>{tabLabel}</span>\n        </a>\n      </li>\n    )\n  }\n}\n\nexport default class PlotContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      value: [],\n      date: [],\n      latitude: null,\n      longitude: null,\n      zoom: 13,\n      station_name: null,\n    };\n  }\n\n  componentDidMount() {\n    this.getData()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n        if (prevProps.site_number !== this.props.site_number || prevProps.days_interval !== this.props.days_interval) {\n            this.setState({\n              isLoaded: false\n            }, \n            () => this.getData()\n            )\n        }\n  }\n\n  getData = () => {\n    // parameterCd=00060: discharge in cubic feet per second\n    const url = `https://waterservices.usgs.gov/nwis/iv/?sites=${this.props.site_number}&period=P${this.props.days_interval}D&&parameterCd=00060&format=json`\n    axios.get(url)\n      .then( (response) => {\n        // handle success\n        this.sortValueDate(response)\n        this.setState({\n          isLoaded: true\n        })\n      })\n      .catch( (error) => {\n        // handle error\n        console.log(error);\n      })\n  }\n\n  sortValueDate = (response) => {\n    // console.log( response.data.value.timeSeries[0].values[0].value )\n\n    const data = response.data.value.timeSeries[0].values[0].value \n\n    const value = _.map(data, 'value')\n    const date = _.map(data, 'dateTime')\n    console.log(response.data.value.timeSeries[0].sourceInfo.geoLocation.geogLocation)\n    this.setState({\n      value: value,\n      date: date,\n      latitude: response.data.value.timeSeries[0].sourceInfo.geoLocation.geogLocation.latitude,\n      longitude: response.data.value.timeSeries[0].sourceInfo.geoLocation.geogLocation.longitude,\n      station_name: response.data.value.timeSeries[0].sourceInfo.siteName\n    })\n  }\n\n  renderleafletMap = () => {\n    const position = [this.state.latitude, this.state.longitude]\n    // const position = [51.1, -0.09]\n\n    return (\n        <Map center={position} zoom={this.state.zoom}>\n          <TileLayer\n            url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          />\n          <Marker position={position}>\n            <Popup>\n              <span>Station: {this.state.station_name}</span>\n            </Popup>\n          </Marker>\n        </Map>\n    )\n\n  }\n\n  renderContent = () => {\n    \n    if (this.props.activeTab == 'Map') {\n      return(\n        <div className=\"col s12\">\n          <div className= \"section\">\n            <span> Station Number: {this.props.site_number} </span>\n            <span> Latitude: {this.state.latitude} </span>\n            <span> Longitude: {this.state.longitude} </span>\n            {this.renderleafletMap()}\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div className=\"col s12\">\n        <div className=\"plotly-container\">\n\n          <PlotTimeSeries value={this.state.value} date={this.state.date}/>        \n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n        <div className=\"section\">\n            <div className=\"row\">\n              <div class=\"col s12\">\n                <ul className=\"tabs\">\n                  <Tab tabLabel=\"Map\" onClick={this.props.handleChangeActiveTab} activeTab={this.props.activeTab} labelClass=\"fas fa-globe-americas fa-lg\"/>\n                  <Tab tabLabel=\"Plot\" onClick={this.props.handleChangeActiveTab} activeTab={this.props.activeTab} labelClass=\"fas fa-chart-line fa-lg\"/>\n                </ul>\n              </div>\n              {this.state.isLoaded?(\n                this.renderContent()\n               ):(\n                <div className=\"col 12 offset-s7 loader\">\n                  <div className=\"preloader-wrapper big active \">\n                    <div className=\"spinner-layer spinner-blue-only\">\n                      <div className=\"circle-clipper left\">\n                        <div className=\"circle\"></div>\n                      </div><div className=\"gap-patch\">\n                        <div className=\"circle\"></div>\n                      </div><div className=\"circle-clipper right\">\n                        <div className=\"circle\"></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n               )\n              }\n            </div>\n        </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport NavSideBar from './components/nav_sidebar';\nimport PlotContent from './components/plot_content';\nimport 'leaflet/dist/leaflet.css'\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      site_number : '08313000',\n      days_interval : '10',\n      activeTab: 'Map'\n    }\n  }\n\n  handleChangeStation = (e) => {\n    console.log(e)\n    this.setState({\n      site_number : e.value\n    },\n    () => console.log('site_number: ' + this.state.site_number)\n    )\n\n  }\n\n\n  handleChangeDayInterval = (e) => {\n    console.log(e)\n    this.setState({\n      days_interval : e.value\n    },\n    () => console.log('days_interval: ' + this.state.days_interval)\n    )\n\n  }\n\n  handleChangeActiveTab = (tabLabel) => {\n    console.log(tabLabel)\n    if (this.state.activeTab !== tabLabel){\n      this.setState({\n        activeTab : tabLabel\n      })\n    }\n\n  }\n\n  renderNavBar = () =>{\n    return(\n      <nav>\n        <div className=\"nav-wrapper blue\">\n          <a href=\"#\" className=\"brand-logo\">Demo SPA</a>\n          <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n            <li>\n              <a href=\"https://github.com/namedyangfan/dashboard\">\n                <i className=\"fab fa-github\"></i> \n              </a>\n            </li>\n            <li>\n              <a href=\"https://www.linkedin.com/in/fanyangcanada/\">\n                <i className=\"fab fa-linkedin\"></i> \n              </a>\n              </li>\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderNavBar()}\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col s12 m3\">\n              <NavSideBar site_number={this.state.site_number} handleChangeStation={this.handleChangeStation} days_interval={this.state.days_interval}\n                handleChangeDayInterval={this.handleChangeDayInterval} activeTab={this.state.activeTab}/>\n            </div>\n            <div className=\"col s12 m9\">\n              <div className=\"card\">\n                <PlotContent site_number={this.state.site_number} days_interval={this.state.days_interval} activeTab={this.state.activeTab}\n                  handleChangeActiveTab={this.handleChangeActiveTab}/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrequire('materialize-css/dist/js/materialize.js');\nrequire('materialize-css/dist/css/materialize.min.css');\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}